import { ColumnType, DatabaseSpec } from "$/lib/sql/mod.ts";

const { Integer, String, Boolean, Date, Json, Blob } = ColumnType;

const Spec = new DatabaseSpec(1, {
  instance: {
    primaryKey: "url",
    columns: {
      url: { type: String },
      displayName: { type: String, nullable: true },
      shortDescription: { type: String, nullable: true },
      description: { type: String, nullable: true },
      software: { type: String, nullable: true },
      softwareVersion: { type: String, nullable: true },
      instanceMetadata: { type: Json, default: {} },
      logo: { type: String, foreignKey: "media", nullable: true },
      logoBlurhash: { type: String, nullable: true },
      logoUrl: { type: String, nullable: true },
      lastSeen: { type: Date },
    },
  },
  profile: {
    primaryKey: "addr",
    indexes: ["instance", ["gcMetadata", "lastSeen"]],
    columns: {
      addr: { type: String },
      name: { type: String },
      instance: { type: String, foreignKey: "instance", nullable: true },
      type: { type: String },
      canonical: { type: Boolean, default: true },
      displayName: { type: String, nullable: true },
      summaryHtml: { type: String, nullable: true },
      summaryRaw: { type: String, nullable: true },
      summaryRawMimetype: { type: String, nullable: true },
      profileMetadata: { type: Json, default: {} },
      requestToFollow: { type: Boolean, default: false },
      createdAt: { type: Date, nullable: true },
      updatedAt: { type: Date, nullable: true },
      lastPostAt: { type: Date, nullable: true },
      lastSeen: { type: Date },
      followingCount: { type: Integer, default: 0 },
      followerCount: { type: Integer, default: 0 },
      postCount: { type: Integer, default: 0 },
      apInbox: { type: String, nullable: true },
      apSharedInbox: { type: String, nullable: true },
      avatarUrl: { type: String, nullable: true },
      bannerUrl: { type: String, nullable: true },
      gcMetadata: { type: Integer },
    },
  },
  profileProxy: {
    primaryKey: "original",
    columns: {
      original: { type: String, foreignKey: "profile" },
      proxy: { type: String },
      canonical: { type: Boolean, default: false },
    },
  },
  follow: {
    primaryKey: "id",
    columns: {
      id: { type: Integer, autoIncrement: true },
      follower: { type: String },
      followed: { type: String },
    },
  },
  publicKey: {
    primaryKey: "name",
    columns: {
      name: { type: String },
      owner: { type: String, foreignKey: "profile" },
      algorithm: { type: Integer },
      key: { type: Blob },
    },
  },
  post: {
    primaryKey: "addr",
    indexes: ["profile", "createdAt", "targetPost", [
      "gcMetadata",
      "createdAt",
    ]],
    columns: {
      addr: { type: String },
      profile: { type: String, foreignKey: "profile" },
      instance: { type: String, foreignKey: "instance", nullable: true },
      type: { type: Integer },
      canonical: { type: Boolean, default: true },
      url: { type: String, nullable: true },
      createdAt: { type: Date },
      updatedAt: { type: Date, nullable: true },
      viewedAt: { type: Date, nullable: true },
      contentHtml: { type: String, nullable: true },
      contentRaw: { type: String, nullable: true },
      contentRawMimetype: { type: String, nullable: true },
      lang: { type: String, nullable: true },
      targetPost: { type: String, nullable: true },
      sensitive: { type: Boolean, default: false },
      contentWarning: { type: String, nullable: true },
      gcMetadata: { type: Integer },
    },
  },
  postProxy: {
    primaryKey: "original",
    columns: {
      original: { type: String, foreignKey: "post" },
      proxy: { type: String },
      canonical: { type: Boolean, default: false },
    },
  },
  tag: {
    primaryKey: "id",
    indexes: ["owner", "tag"],
    columns: {
      id: { type: Integer, autoIncrement: true },
      owner: { type: String },
      ownerIsPost: { type: Boolean },
      tag: { type: String },
      inline: { type: Boolean, default: true },
      url: { type: String, nullable: true },
    },
  },
  mention: {
    primaryKey: "id",
    indexes: ["owner", "mentioned"],
    columns: {
      id: { type: Integer, autoIncrement: true },
      owner: { type: String },
      ownerIsPost: { type: Boolean },
      mentioned: { type: String },
    },
  },
  reaction: {
    primaryKey: "addr",
    indexes: ["post"],
    columns: {
      addr: { type: String },
      post: { type: String, foreignKey: "post" },
      profile: { type: String, foreignKey: "profile" },
      createdAt: { type: Date },
      content: { type: String, nullable: true },
    },
  },
  media: {
    primaryKey: "hash",
    indexes: ["url", "domain"],
    columns: {
      hash: { type: String },
      domain: { type: String, nullable: true },
      url: { type: String, nullable: true },
      mimetype: { type: String },
      bytes: { type: Integer },
      data: { type: Blob, nullable: true },
      width: { type: Integer, nullable: true },
      height: { type: Integer, nullable: true },
      duration: { type: Integer, nullable: true },
      createdAt: { type: Date },
    },
  },
  attachment: {
    primaryKey: "id",
    indexes: ["owner", "originalUrl"],
    columns: {
      id: { type: Integer, autoIncrement: true },
      type: { type: Integer },
      owner: { type: String },
      ownerIsPost: { type: Boolean, default: true },
      original: { type: String, foreignKey: "media", nullable: true },
      originalUrl: { type: String },
      small: { type: String, foreignKey: "media", nullable: true },
      smallUrl: { type: String, nullable: true },
      blurhash: { type: String, nullable: true },
      alt: { type: String, nullable: true },
      sensitive: { type: Boolean, default: false },
    },
  },
  linkCard: {
    primaryKey: "url",
    columns: {
      url: { type: String },
      title: { type: String },
      summary: { type: String, nullable: true },
      image: { type: String, nullable: true, foreignKey: "media" },
      imageBlurhash: { type: String, nullable: true },
      favicon: { type: String, nullable: true, foreignKey: "media" },
      fetchedAt: { type: Date },
    },
  },
  postLinkCard: {
    primaryKey: "id",
    indexes: ["post"],
    columns: {
      id: { type: Integer, autoIncrement: true },
      post: { type: String, foreignKey: "post" },
      link: { type: String, foreignKey: "linkCard" },
    },
  },
});

export default Spec;
